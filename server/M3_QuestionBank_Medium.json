[
  {
    "problemStatement": "Write a function that takes an array of numbers and returns the sum of all the even numbers in the array.",
    "code": "function sumEvenNumbers(numbers) {\n  let sum = 0;\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] % 2 === 0) {\n      sum += numbers[i];\n    }\n  }\n  return sum;\n}",
    "testCases": [
      {
        "input": [1, 2, 3, 4, 5, 6],
        "expectedOutput": 12
      },
      {
        "input": [1, 3, 5, 7, 9],
        "expectedOutput": 0
      },
      {
        "input": [2, 4, 6, 8, 10],
        "expectedOutput": 30
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = sumEvenNumbers(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes a string and returns the number of vowels in the string.",
    "code": "function countVowels(str) {\n  const vowels = ['a', 'e', 'i', 'o', 'u'];\n  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (vowels.includes(str[i].toLowerCase())) {\n      count++;\n    }\n  }\n  return count;\n}",
    "testCases": [
      {
        "input": "hello world",
        "expectedOutput": 3
      },
      {
        "input": "javascript",
        "expectedOutput": 3
      },
      {
        "input": "programming",
        "expectedOutput": 2
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = countVowels(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes two arrays and returns a new array containing only the elements that are present in both arrays.",
    "code": "function findCommonElements(arr1, arr2) {\n  const commonElements = [];\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr2.includes(arr1[i])) {\n      commonElements.push(arr1[i]);\n    }\n  }\n  return commonElements;\n}",
    "testCases": [
      {
        "input": [[1, 2, 3, 4, 5], [2, 4, 6, 8]],
        "expectedOutput": [2, 4]
      },
      {
        "input": [["a", "b", "c", "d"], ["c", "d", "e", "f"]],
        "expectedOutput": ["c", "d"]
      },
      {
        "input": [[10, 20, 30, 40], [50, 60, 70, 80]],
        "expectedOutput": []
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = findCommonElements(testCase.input[0], testCase.input[1]);\n  return JSON.stringify(result) === JSON.stringify(testCase.expectedOutput);\n}"
  },
  {
    "problemStatement": "Write a function that takes an array of numbers and returns the largest number in the array.",
    "code": "function findLargestNumber(numbers) {\n  let largest = numbers[0];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > largest) {\n      largest = numbers[i];\n    }\n  }\n  return largest;\n}",
    "testCases": [
      {
        "input": [10, 20, 30, 40, 50],
        "expectedOutput": 50
      },
      {
        "input": [5, 10, 15, 20, 25],
        "expectedOutput": 25
      },
      {
        "input": [1, 2, 3, 4, 5],
        "expectedOutput": 5
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = findLargestNumber(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes a string and reverses the order of the words in the string.",
    "code": "function reverseWords(str) {\n  return str.split(' ').reverse().join(' ');\n}",
    "testCases": [
      {
        "input": "hello world",
        "expectedOutput": "world hello"
      },
      {
        "input": "javascript programming",
        "expectedOutput": "programming javascript"
      },
      {
        "input": "coding is fun",
        "expectedOutput": "fun is coding"
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = reverseWords(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes an array of objects and returns a new array containing only the objects that have a specific property with a specific value.",
    "code": "function filterObjects(objects, property, value) {\n  const filteredObjects = [];\n  for (let i = 0; i < objects.length; i++) {\n    if (objects[i][property] === value) {\n      filteredObjects.push(objects[i]);\n    }\n  }\n  return filteredObjects;\n}",
    "testCases": [
      {
      "input": [{ "name": "Alice", "age": 30 }, { "name": "Bob", "age": 25 }, { "name": "Charlie", "age": 30 }],
      "property": "age",
      "value": 30,
      "expectedOutput": [{ "name": "Alice", "age": 30 }, { "name": "Charlie", "age": 30 }]
      },
      {
      "input": [{ "id": 1, "name": "apple" }, { "id": 2, "name": "banana" }, { "id": 3, "name": "orange" }],
      "property": "id",
      "value": 2,
      "expectedOutput": [{ "id": 2, "name": "banana" }]
      },
      {
      "input": [{ "color": "red", "size": "small" }, { "color": "blue", "size": "medium" }, { "color": "green", "size": "large" }],
      "property": "color",
      "value": "blue",
      "expectedOutput": [{ "color": "blue", "size": "medium" }]
      }
    
    ],
    "validationScript": "function validate(testCase) {\n  const result = filterObjects(testCase.input, testCase.property, testCase.value);\n  return JSON.stringify(result) === JSON.stringify(testCase.expectedOutput);\n}"
  },
  {
    "problemStatement": "Write a function that takes a string and returns the number of times a specific character appears in the string.",
    "code": "function countCharacterOccurrences(str, char) {\n  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === char) {\n      count++;\n    }\n  }\n  return count;\n}",
    "testCases": [
      {
        "input": "hello world",
        "char": "l",
        "expectedOutput": 3
      },
      {
        "input": "javascript programming",
        "char": "a",
        "expectedOutput": 2
      },
      {
        "input": "coding is fun",
        "char": "i",
        "expectedOutput": 1
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = countCharacterOccurrences(testCase.input, testCase.char);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes an array of numbers and returns the average of the numbers in the array.",
    "code": "function calculateAverage(numbers) {\n  let sum = 0;\n  for (let i = 0; i < numbers.length; i++) {\n    sum += numbers[i];\n  }\n  return sum / numbers.length;\n}",
    "testCases": [
      {
        "input": [10, 20, 30, 40, 50],
        "expectedOutput": 30
      },
      {
        "input": [5, 10, 15, 20, 25],
        "expectedOutput": 15
      },
      {
        "input": [1, 2, 3, 4, 5],
        "expectedOutput": 3
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = calculateAverage(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes an array of strings and returns a new array containing only the strings that are longer than a specified length.",
    "code": "function filterStringsByLength(strings, minLength) {\n  const filteredStrings = [];\n  for (let i = 0; i < strings.length; i++) {\n    if (strings[i].length > minLength) {\n      filteredStrings.push(strings[i]);\n    }\n  }\n  return filteredStrings;\n}",
    "testCases": [
      {
        "input": ["hello", "world", "javascript", "programming"],
        "minLength": 5,
        "expectedOutput": ["javascript", "programming"]
      },
      {
        "input": ["apple", "banana", "orange", "grape"],
        "minLength": 6,
        "expectedOutput": ["banana", "orange"]
      },
      {
        "input": ["cat", "dog", "bird", "fish"],
        "minLength": 4,
        "expectedOutput": ["bird", "fish"]
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = filterStringsByLength(testCase.input, testCase.minLength);\n  return JSON.stringify(result) === JSON.stringify(testCase.expectedOutput);\n}"
  },
  {
    "problemStatement": "Write a function that takes a string and returns a new string with all the vowels removed.",
    "code": "function removeVowels(str) {\n  const vowels = ['a', 'e', 'i', 'o', 'u'];\n  let newStr = '';\n  for (let i = 0; i < str.length; i++) {\n    if (!vowels.includes(str[i].toLowerCase())) {\n      newStr += str[i];\n    }\n  }\n  return newStr;\n}",
    "testCases": [
      {
        "input": "hello world",
        "expectedOutput": "hll wrld"
      },
      {
        "input": "javascript programming",
        "expectedOutput": "jvscrpt prgrmmng"
      },
      {
        "input": "coding is fun",
        "expectedOutput": "cdng s fn"
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = removeVowels(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes an array of numbers and returns a new array containing only the unique numbers in the array.",
    "code": "function findUniqueNumbers(numbers) {\n  const uniqueNumbers = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (!uniqueNumbers.includes(numbers[i])) {\n      uniqueNumbers.push(numbers[i]);\n    }\n  }\n  return uniqueNumbers;\n}",
    "testCases": [
      {
        "input": [1, 2, 3, 4, 5, 1, 2, 3],
        "expectedOutput": [1, 2, 3, 4, 5]
      },
      {
        "input": [10, 20, 30, 10, 20, 40],
        "expectedOutput": [10, 20, 30, 40]
      },
      {
        "input": [1, 1, 1, 1, 1],
        "expectedOutput": [1]
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = findUniqueNumbers(testCase.input);\n  return JSON.stringify(result) === JSON.stringify(testCase.expectedOutput);\n}"
  },
  {
    "problemStatement": "Write a function that takes a string and returns a new string with the first letter of each word capitalized.",
    "code": "function capitalizeFirstLetters(str) {\n  return str.split(' ').map(word => word[0].toUpperCase() + word.slice(1)).join(' ');\n}",
    "testCases": [
      {
        "input": "hello world",
        "expectedOutput": "Hello World"
      },
      {
        "input": "javascript programming",
        "expectedOutput": "Javascript Programming"
      },
      {
        "input": "coding is fun",
        "expectedOutput": "Coding Is Fun"
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = capitalizeFirstLetters(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes an array of numbers and returns a new array with the elements sorted in ascending order.",
    "code": "function sortNumbersAscending(numbers) {\n  return numbers.sort((a, b) => a - b);\n}",
    "testCases": [
      {
        "input": [5, 2, 9, 1, 7],
        "expectedOutput": [1, 2, 5, 7, 9]
      },
      {
        "input": [10, 20, 30, 40, 50],
        "expectedOutput": [10, 20, 30, 40, 50]
      },
      {
        "input": [3, 1, 4, 1, 5, 9, 2, 6, 5],
        "expectedOutput": [1, 1, 2, 3, 4, 5, 5, 6, 9]
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = sortNumbersAscending(testCase.input);\n  return JSON.stringify(result) === JSON.stringify(testCase.expectedOutput);\n}"
  },
  {
    "problemStatement": "Write a function that takes a string and returns a new string with all the duplicate characters removed.",
    "code": "function removeDuplicateCharacters(str) {\n  const uniqueChars = [];\n  for (let i = 0; i < str.length; i++) {\n    if (!uniqueChars.includes(str[i])) {\n      uniqueChars.push(str[i]);\n    }\n  }\n  return uniqueChars.join('');\n}",
    "testCases": [
      {
        "input": "hello world",
        "expectedOutput": "hel wrd"
      },
      {
        "input": "javascript programming",
        "expectedOutput": "jvscrpt prgmmng"
      },
      {
        "input": "coding is fun",
        "expectedOutput": "cding is fn"
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = removeDuplicateCharacters(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes an array of numbers and returns the sum of all the numbers in the array.",
    "code": "function sumArray(numbers) {\n  let sum = 0;\n  for (let i = 0; i < numbers.length; i++) {\n    sum += numbers[i];\n  }\n  return sum;\n}",
    "testCases": [
      {
        "input": [1, 2, 3, 4, 5],
        "expectedOutput": 15
      },
      {
        "input": [10, 20, 30, 40, 50],
        "expectedOutput": 150
      },
      {
        "input": [],
        "expectedOutput": 0
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = sumArray(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes a string and returns a new string with the words in reverse order.",
    "code": "function reverseStringWords(str) {\n  return str.split(' ').reverse().join(' ');\n}",
    "testCases": [
      {
        "input": "hello world",
        "expectedOutput": "world hello"
      },
      {
        "input": "javascript programming",
        "expectedOutput": "programming javascript"
      },
      {
        "input": "coding is fun",
        "expectedOutput": "fun is coding"
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = reverseStringWords(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes two arrays and returns a new array containing only the elements that are present in one array but not in the other.",
    "code": "function findUniqueElements(arr1, arr2) {\n  const uniqueElements = [];\n  for (let i = 0; i < arr1.length; i++) {\n    if (!arr2.includes(arr1[i])) {\n      uniqueElements.push(arr1[i]);\n    }\n  }\n  for (let i = 0; i < arr2.length; i++) {\n    if (!arr1.includes(arr2[i])) {\n      uniqueElements.push(arr2[i]);\n    }\n  }\n  return uniqueElements;\n}",
    "testCases": [
      {
        "input": [[1, 2, 3, 4, 5], [2, 4, 6, 8]],
        "expectedOutput": [1, 3, 5, 6, 8]
      },
      {
        "input": [["a", "b", "c", "d"], ["c", "d", "e", "f"]],
        "expectedOutput": ["a", "b", "e", "f"]
      },
      {
        "input": [[10, 20, 30, 40], [50, 60, 70, 80]],
        "expectedOutput": [10, 20, 30, 40, 50, 60, 70, 80]
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = findUniqueElements(testCase.input[0], testCase.input[1]);\n  return JSON.stringify(result) === JSON.stringify(testCase.expectedOutput);\n}"
  },
  {
    "problemStatement": "Write a function that takes a string and returns the length of the longest word in the string.",
    "code": "function findLongestWordLength(str) {\n  const words = str.split(' ');\n  let longestLength = 0;\n  for (let i = 0; i < words.length; i++) {\n    if (words[i].length > longestLength) {\n      longestLength = words[i].length;\n    }\n  }\n  return longestLength;\n}",
    "testCases": [
      {
        "input": "hello world",
        "expectedOutput": 5
      },
      {
        "input": "javascript programming",
        "expectedOutput": 11
      },
      {
        "input": "coding is fun",
        "expectedOutput": 6
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = findLongestWordLength(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes an array of numbers and returns the median of the numbers in the array.",
    "code": "function calculateMedian(numbers) {\n  numbers.sort((a, b) => a - b);\n  const mid = Math.floor(numbers.length / 2);\n  if (numbers.length % 2 === 0) {\n    return (numbers[mid - 1] + numbers[mid]) / 2;\n  } else {\n    return numbers[mid];\n  }\n}",
    "testCases": [
      {
        "input": [1, 2, 3, 4, 5],
        "expectedOutput": 3
      },
      {
        "input": [10, 20, 30, 40, 50],
        "expectedOutput": 30
      },
      {
        "input": [2, 4, 6, 8],
        "expectedOutput": 5
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = calculateMedian(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes a string and returns a new string with the first and last letters swapped.",
    "code": "function swapFirstLastLetters(str) {\n  if (str.length <= 1) {\n    return str;\n  }\n  return str[str.length - 1] + str.substring(1, str.length - 1) + str[0];\n}",
    "testCases": [
      {
        "input": "hello",
        "expectedOutput": "oellh"
      },
      {
        "input": "world",
        "expectedOutput": "dlrow"
      },
      {
        "input": "javascript",
        "expectedOutput": "tvascrijp"
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = swapFirstLastLetters(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes an array of strings and returns a new array containing only the strings that start with a specific letter.",
    "code": "function filterStringsByStartingLetter(strings, letter) {\n  const filteredStrings = [];\n  for (let i = 0; i < strings.length; i++) {\n    if (strings[i][0].toLowerCase() === letter.toLowerCase()) {\n      filteredStrings.push(strings[i]);\n    }\n  }\n  return filteredStrings;\n}",
    "testCases": [
      {
        "input": ["apple", "banana", "orange", "grape"],
        "letter": "a",
        "expectedOutput": ["apple", "banana"]
      },
      {
        "input": ["cat", "dog", "bird", "fish"],
        "letter": "b",
        "expectedOutput": ["bird"]
      },
      {
        "input": ["hello", "world", "javascript", "programming"],
        "letter": "j",
        "expectedOutput": ["javascript"]
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = filterStringsByStartingLetter(testCase.input, testCase.letter);\n  return JSON.stringify(result) === JSON.stringify(testCase.expectedOutput);\n}"
  },
  {
    "problemStatement": "Write a function that takes an array of objects and returns a new array containing only the objects that have a specific property.",
    "code": "function filterObjectsByProperty(objects, property) {\n  const filteredObjects = [];\n  for (let i = 0; i < objects.length; i++) {\n    if (objects[i].hasOwnProperty(property)) {\n      filteredObjects.push(objects[i]);\n    }\n  }\n  return filteredObjects;\n}",
    "testCases": [
      
    ],
    "validationScript": "function validate(testCase) {\n  const result = filterObjectsByProperty(testCase.input, testCase.property);\n  return JSON.stringify(result) === JSON.stringify(testCase.expectedOutput);\n}"
  },
  {
    "problemStatement": "Write a function that takes a string and returns a new string with all the letters in reverse order.",
    "code": "function reverseStringLetters(str) {\n  return str.split('').reverse().join('');\n}",
    "testCases": [
      {
        "input": "hello",
        "expectedOutput": "olleh"
      },
      {
        "input": "world",
        "expectedOutput": "dlrow"
      },
      {
        "input": "javascript",
        "expectedOutput": "tpacsavaj"
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = reverseStringLetters(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes two arrays and returns a new array containing only the elements that are present in both arrays, but only once.",
    "code": "function findCommonElementsOnce(arr1, arr2) {\n  const commonElements = [];\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr2.includes(arr1[i]) && !commonElements.includes(arr1[i])) {\n      commonElements.push(arr1[i]);\n    }\n  }\n  return commonElements;\n}",
    "testCases": [
      {
        "input": [[1, 2, 3, 4, 5], [2, 4, 6, 8]],
        "expectedOutput": [2, 4]
      },
      {
        "input": [["a", "b", "c", "d"], ["c", "d", "e", "f"]],
        "expectedOutput": ["c", "d"]
      },
      {
        "input": [[10, 20, 30, 40], [50, 60, 70, 80]],
        "expectedOutput": []
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = findCommonElementsOnce(testCase.input[0], testCase.input[1]);\n  return JSON.stringify(result) === JSON.stringify(testCase.expectedOutput);\n}"
  },
  {
    "problemStatement": "Write a function that takes an array of numbers and returns the smallest number in the array.",
    "code": "function findSmallestNumber(numbers) {\n  let smallest = numbers[0];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] < smallest) {\n      smallest = numbers[i];\n    }\n  }\n  return smallest;\n}",
    "testCases": [
      {
        "input": [10, 20, 30, 40, 50],
        "expectedOutput": 10
      },
      {
        "input": [5, 10, 15, 20, 25],
        "expectedOutput": 5
      },
      {
        "input": [1, 2, 3, 4, 5],
        "expectedOutput": 1
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = findSmallestNumber(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes a string and returns a new string with all the characters in uppercase.",
    "code": "function toUpperCase(str) {\n  return str.toUpperCase();\n}",
    "testCases": [
      {
        "input": "hello world",
        "expectedOutput": "HELLO WORLD"
      },
      {
        "input": "javascript programming",
        "expectedOutput": "JAVASCRIPT PROGRAMMING"
      },
      {
        "input": "coding is fun",
        "expectedOutput": "CODING IS FUN"
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = toUpperCase(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes a string and returns a new string with all the characters in lowercase.",
    "code": "function toLowerCase(str) {\n  return str.toLowerCase();\n}",
    "testCases": [
      {
        "input": "HELLO WORLD",
        "expectedOutput": "hello world"
      },
      {
        "input": "JAVASCRIPT PROGRAMMING",
        "expectedOutput": "javascript programming"
      },
      {
        "input": "CODING IS FUN",
        "expectedOutput": "coding is fun"
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = toLowerCase(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes an array of objects and returns a new array containing only the objects that have a specific property and a specific value.",
    "code": "function filterObjectsByPropertyValue(objects, property, value) {\n  const filteredObjects = [];\n  for (let i = 0; i < objects.length; i++) {\n    if (objects[i][property] === value) {\n      filteredObjects.push(objects[i]);\n    }\n  }\n  return filteredObjects;\n}",
    "testCases": [
      {
      "input": [{ "name": "Alice", "age": 30 }, { "name": "Bob", "age": 25 }, { "name": "Charlie", "age": 30 }],
      "property": "age",
      "value": 30,
      "expectedOutput": [{ "name": "Alice", "age": 30 }, { "name": "Charlie", "age": 30 }]
      },
      {
      "input": [{ "id": 1, "name": "apple" }, { "id": 2, "name": "banana" }, { "id": 3, "name": "orange" }],
      "property": "id",
      "value": 2,
      "expectedOutput": [{ "id": 2, "name": "banana" }]
      },
      {
      "input": [{ "color": "red", "size": "small" }, { "color": "blue", "size": "medium" }, { "color": "green", "size": "large" }],
      "property": "color",
      "value": "blue",
      "expectedOutput": [{ "color": "blue", "size": "medium" }]
      }
    
    ],
    "validationScript": "function validate(testCase) {\n  const result = filterObjectsByPropertyValue(testCase.input, testCase.property, testCase.value);\n  return JSON.stringify(result) === JSON.stringify(testCase.expectedOutput);\n}"
  },
  {
    "problemStatement": "Write a function that takes a string and returns a new string with all the spaces removed.",
    "code": "function removeSpaces(str) {\n  return str.replace(/ /g, '');\n}",
    "testCases": [
      {
        "input": "hello world",
        "expectedOutput": "helloworld"
      },
      {
        "input": "javascript programming",
        "expectedOutput": "javascriptprogramming"
      },
      {
        "input": "coding is fun",
        "expectedOutput": "codingisfun"
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = removeSpaces(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  },
  {
    "problemStatement": "Write a function that takes an array of numbers and returns a new array containing only the odd numbers in the array.",
    "code": "function filterOddNumbers(numbers) {\n  return numbers.filter(number => number % 2 !== 0);\n}",
    "testCases": [
      {
        "input": [1, 2, 3, 4, 5, 6],
        "expectedOutput": [1, 3, 5]
      },
      {
        "input": [1, 3, 5, 7, 9],
        "expectedOutput": [1, 3, 5, 7, 9]
      },
      {
        "input": [2, 4, 6, 8, 10],
        "expectedOutput": []
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = filterOddNumbers(testCase.input);\n  return JSON.stringify(result) === JSON.stringify(testCase.expectedOutput);\n}"
  },
  {
    "problemStatement": "Write a function that takes a string and returns a new string with all the characters in reverse order.",
    "code": "function reverseString(str) {\n  return str.split('').reverse().join('');\n}",
    "testCases": [
      {
        "input": "hello",
        "expectedOutput": "olleh"
      },
      {
        "input": "world",
        "expectedOutput": "dlrow"
      },
      {
        "input": "javascript",
        "expectedOutput": "tpircsavaj"
      }
    ],
    "validationScript": "function validate(testCase) {\n  const result = reverseString(testCase.input);\n  return result === testCase.expectedOutput;\n}"
  }   
]
    